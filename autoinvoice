#!/usr/bin/php -q
<?
require("libraries/Invoice.php");
require("libraries/Calendar.php");
require("libraries/Timesheet.php");

function s($n){$x='';for($i=0;$i<$n;$i++){$x.=' ';}return $x;}

class AutoInvoice {
	function __construct() {
		require(dirname(__FILE__)."/config/config.php");
		$this->config = $config;
		$this->calendar = new Calendar;
	}

	function usage() {
		echo "Usage: autoinvoice <invoice | timesheet | info>\n";
		exit;
	}

	function invoice() {
		if ($invoice_number = $this->calendar->are_we_invoicing_today()) {

			$last_invoice_date = $this->calendar->get_date_of_previous_invoice();

			$sick_days = $this->calendar->get_sick_days_for_period($last_invoice_date);
			$holiday_days = $this->calendar->get_holiday_days_for_period($last_invoice_date);

			$billable_days = $this->calendar->get_billable_days_since($last_invoice_date, time(), $sick_days, $holiday_days);

			$transactions = $this->calendar->get_days_as_invoice_transactions($billable_days);

			$invoice = new Invoice($invoice_number);

			foreach ($transactions as $transaction) {
				$invoice->add_transaction($transaction['title'], $transaction['days'], $this->config['day_rate']);
			}

			$invoice_filename = str_replace('{{DATE}}',date('Ymd'),$this->config['invoice_filename_format']);
			$invoice_filename = str_replace('{{INVOICE_NUMBER}}',$invoice_number,$invoice_filename);

			$invoice->generate($this->config['invoice_path'].'/'.$invoice_filename);

			echo "Saved new invoice: $invoice_filename\n";

			if ($this->config['invoice_email_destination']) {
				require_once("libraries/class.phpmailer.php");

				$mail = new PHPMailer(true);
				$mail->SetFrom($this->config['invoice_email_sender_address'], $this->config['invoice_email_sender_name']);
				$mail->AddAddress($this->config['invoice_email_destination']);
				$mail->Subject = str_replace('{{INVOICE_NUMBER}}',$invoice_number,$this->config['invoice_email_subject']);
				$mail->Subject = str_replace('{{DATE}}',date('d.m.Y'),$mail->Subject);
				$mail->Body = "Hi there,

Your new invoice $invoice_number has been generated.

Much love,
{$this->config['invoice_email_sender_name']}";
				$mail->AddAttachment($this->config['invoice_path'].'/'.$invoice_filename);
				$mail->Send();
			}
		}
	}

	function timesheet() {
		if ($this->calendar->are_we_timesheeting_today()) {
			$last_invoice_date = $this->calendar->get_date_of_previous_invoice();

			$sick_days = $this->calendar->get_sick_days_for_period($last_invoice_date);
			$holiday_days = $this->calendar->get_holiday_days_for_period($last_invoice_date);

			$billable_days = $this->calendar->get_billable_days_since($last_invoice_date, time() + ($this->config['timesheet_lead_time_days'] * 86400), $sick_days, $holiday_days);

			$entries = $this->calendar->get_days_as_timesheet_entries($billable_days);

			$timesheet = new Timesheet;

			$timesheet->timesheet_name = $this->config['timesheet_name'];
			$timesheet->timesheet_jobtitle = $this->config['timesheet_jobtitle'];
			$timesheet->timesheet_client = $this->config['timesheet_client'];
			$timesheet->timesheet_client_location = $this->config['timesheet_client_location'];

			foreach ($entries as $entry) {
				$timesheet->add_day($entry['day'],$entry['date'],$entry['start'],$entry['finish']);
			}

			$timesheet_filename = str_replace('{{DATE}}',date('Ymd',time()+($this->config['timesheet_lead_time_days'] * 86400)),$this->config['timesheet_filename_format']);

			$timesheet->generate($this->config['timesheet_path'].'/'.$timesheet_filename);

			echo "Saved new timesheet: $timesheet_filename\n";

			if ($this->config['timesheet_email_destination']) {
				require_once("libraries/class.phpmailer.php");

				$mail = new PHPMailer(true);
				$mail->SetFrom($this->config['timesheet_email_sender_address'], $this->config['timesheet_email_sender_name']);
				$mail->AddAddress($this->config['timesheet_email_destination']);
				$mail->Subject = str_replace('{{DATE}}',date('d.m.Y',time()+($this->config['timesheet_lead_time_days'] * 86400)),$this->config['timesheet_email_subject']);
				$mail->Body = "Hi there,

Your new timesheet $timesheet_number has been generated.

Much love,
{$this->config['timesheet_email_sender_name']}";
				$mail->AddAttachment($this->config['timesheet_path'].'/'.$timesheet_filename);
				$mail->Send();
			}
		}
	}

	function info() {
		$last_invoice_date = $this->calendar->get_date_of_previous_invoice();
		$next_invoice_date = $this->calendar->get_date_of_next_invoice($last_invoice_date);

		echo "\nNext invoice: ".date('d.m.Y',strtotime($next_invoice_date))."\n\n";

		$sick_days = $this->calendar->get_sick_days_for_period($last_invoice_date, strtotime($next_invoice_date));
		$holiday_days = $this->calendar->get_holiday_days_for_period($last_invoice_date, strtotime($next_invoice_date));

		$billable_days = $this->calendar->get_billable_days_since($last_invoice_date, strtotime($next_invoice_date), $sick_days, $holiday_days);

		$subtotal = count($billable_days) * $this->config['day_rate'];
		$vat = ($subtotal/100) * $this->config['vat_rate'];
		$total = $subtotal + $vat;

		echo s(4)."subtotal: £$subtotal\n";
		echo s(9)."vat: £$vat\n";
		echo s(7)."total: £$total\n\n";
	}
}

$a = new AutoInvoice;

if ($argc <2) {
	$a->usage();
}

if (method_exists('AutoInvoice',$argv[1])) {
	$a->{$argv[1]}();
} else {
	$a->usage();
}
?>
